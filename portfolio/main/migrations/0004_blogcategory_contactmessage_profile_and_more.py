# Generated by Django 5.2.1 on 2025-06-27 07:28

import ckeditor_uploader.fields
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0003_rename_level_skill_proficiency_skill_description'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3b82f6', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Your Name', max_length=100)),
                ('title', models.CharField(default='Front-end Engineer & Designer', max_length=200)),
                ('bio', models.TextField()),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('resume', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('github_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.DeleteModel(
            name='UserProfile',
        ),
        migrations.AlterModelOptions(
            name='blogpost',
            options={'ordering': ['-is_featured', '-published_at', '-created_at']},
        ),
        migrations.AlterModelOptions(
            name='certificate',
            options={'ordering': ['-is_featured', 'order', '-issue_date']},
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['-is_featured', 'order', '-created_at']},
        ),
        migrations.AlterModelOptions(
            name='skill',
            options={'ordering': ['order', 'name']},
        ),
        migrations.RenameField(
            model_name='certificate',
            old_name='issued_date',
            new_name='issue_date',
        ),
        migrations.RemoveField(
            model_name='blogpost',
            name='image',
        ),
        migrations.RemoveField(
            model_name='blogpost',
            name='pub_date',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='credential_link',
        ),
        migrations.RemoveField(
            model_name='skill',
            name='description',
        ),
        migrations.AddField(
            model_name='blogpost',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='excerpt',
            field=models.TextField(default=django.utils.timezone.now, help_text='Brief description for previews', max_length=300),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogpost',
            name='featured_image',
            field=models.ImageField(blank=True, null=True, upload_to='blog/'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='published_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='read_time',
            field=models.IntegerField(default=5, help_text='Estimated read time in minutes'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='slug',
            field=models.SlugField(blank=True, unique=True),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='views',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='certificate',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='certificate',
            name='credential_id',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='certificate',
            name='credential_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='expiry_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='certificate',
            name='issuer',
            field=models.CharField(default=django.utils.timezone.now, max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='certificate',
            name='order',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='certificate',
            name='skills',
            field=models.ManyToManyField(blank=True, to='main.skill'),
        ),
        migrations.AddField(
            model_name='project',
            name='demo_url',
            field=models.URLField(blank=True, help_text='Live demo URL'),
        ),
        migrations.AddField(
            model_name='project',
            name='detailed_description',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True),
        ),
        migrations.AddField(
            model_name='project',
            name='github_url',
            field=models.URLField(blank=True, help_text='GitHub repository URL'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='order',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='project',
            name='slug',
            field=models.SlugField(blank=True, unique=True),
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='published', max_length=20),
        ),
        migrations.AddField(
            model_name='project',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='skill',
            name='color',
            field=models.CharField(default='#3b82f6', help_text='Hex color code', max_length=7),
        ),
        migrations.AddField(
            model_name='skill',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='skill',
            name='icon',
            field=models.CharField(blank=True, help_text='CSS class for icon', max_length=100),
        ),
        migrations.AddField(
            model_name='skill',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='skill',
            name='order',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='skill',
            name='skill_type',
            field=models.CharField(choices=[('technical', 'Technical'), ('design', 'Design'), ('soft', 'Soft Skills'), ('tools', 'Tools')], default='technical', max_length=20),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='content',
            field=ckeditor_uploader.fields.RichTextUploadingField(),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='certificate',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='certificates/'),
        ),
        migrations.AlterField(
            model_name='project',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='project',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='projects/'),
        ),
        migrations.RemoveField(
            model_name='project',
            name='technologies',
        ),
        migrations.AlterField(
            model_name='skill',
            name='proficiency',
            field=models.IntegerField(help_text='Proficiency level (0-100)'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.blogcategory'),
        ),
        migrations.AddField(
            model_name='project',
            name='technologies',
            field=taggit.managers.TaggableManager(help_text='Technologies used (comma-separated)', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
